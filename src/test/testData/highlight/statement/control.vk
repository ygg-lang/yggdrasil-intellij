continue;
continue label;
break;
break label;
fallthrough;
fallthrough label;
return;
return expression;
raise;
raise expression;
yield;
yield expression;
yield return expression;
yield break;
yield break label;
yield from;
yield from expression;


try {
    print("try");
}

try Option(T) {
    print("try");
}

try T? {
    execute()
}
.catch {
    type RuntimeError:
        print("RuntimeError")
}
?.match {
    case Some(a):
        print("Some"),
}