{
    parserClass = "yggdrasil.psi.parser.YggdrasilParser"
    parserUtilClass = "yggdrasil.psi.ParserExtension"

    extends = "yggdrasil.psi.YggdrasilElement"

    psiClassPrefix = "Yggdrasil"
    psiImplClassSuffix = "Node"
    psiPackage = "yggdrasil.psi.node"
    psiImplPackage = "yggdrasil.psi.node"

    elementTypeHolderClass = "yggdrasil.psi.YggdrasilTypes"
    elementTypeClass = "yggdrasil.psi.YggdrasilElementType"
    tokenTypeClass = "yggdrasil.psi.YggdrasilElementType"

    psiImplUtilClass = "yggdrasil.psi.node.YggdrasilPsiExtension"

    tokens = [
        // comment
        COMMENT_LINE = "Comment"
        COMMENT_BLOCK = "Comment Block"

        // literal
        URL = "Url"
        SYMBOL    = "Symbol"
        ESCAPED   = "\escaped"
        KW_BOOLEAN = "true|false"
        KW_ANY = "any"

        REFERENCE = "$Symbol"

        STRING_QUOTE = "String Quote"
        STRING_CHAR = "String Character"
        STRING_ESCAPE = "String Escaped"
        SELECTION_LINE = "SELECTION_LINE"


        KW_GRAMMAR = "grammar"
        KW_GROUP = "group"
        KW_CLASS = "class"
        KW_UNION = "union"
        KW_CLIMB = "climb"
        KW_IMPORT = "import"
        KW_AS = "as"
        KW_MACRO = "macro"

		VERSION = "<<semver>>"
        PARENTHESIS_L = '('
        PARENTHESIS_R = ')'
        BRACKET_L = '['
        BRACKET_R = ']'
        BRACE_L = '{'
        BRACE_R = '}'
        ANGLE_L = '<'
        ANGLE_R = '>'
        ACCENT = '^'
        EQ = '='
        COLON = ':'
        SEMICOLON = ';'
        COMMA = ','
        DOLLAR = '$'
        DOT = '.'
        STAR = '*'
        AT = '@'
        TO = "->"
        HYPHEN = "-"
        SLASH = '/'
        PLACE_HOLDER = "_"
//      SPACE='regexp:\s+'
//      ANY = 'regexp:.'

    ]
}

// https://github.com/bytecodealliance/fluent/blob/master/spec/fluent.ebnf
wit ::= statements*
private statements ::=
    grammar
  | class
  | union
  | group
  | SEMICOLON

// package wasi:blobstore@0.2.0-draft;
grammar ::= modifiers KW_GRAMMAR identifier BRACE_L BRACE_R {
	pin = 2
    mixin = "yggdrasil.psi.mixin.MixinGrammar"
}

modifiers ::= identifier+;

class  ::= modifiers KW_CLASS SYMBOL {
    pin = 2
    mixin = "yggdrasil.psi.mixin.MixinClass"
}
union  ::= modifiers KW_UNION SYMBOL {
    pin = 2
    mixin = "yggdrasil.psi.mixin.MixinUnion"
}
group  ::= modifiers KW_GROUP SYMBOL {
    pin = 2
    mixin = "yggdrasil.psi.mixin.MixinUnion"
}
regex ::= SYMBOL {

}

pair ::= key COLON value;
key ::= identifier;

value ::= identifier | ESCAPED;


number ::= SYMBOL {
//    mixin = "yggdrasil.psi.mixin.MixinNumber"
}
string ::= SYMBOL {
    mixin = "yggdrasil.psi.mixin.MixinString"
}


/* Literals */

/* Identifier */
organization-name   ::= SYMBOL | ESCAPED;
module-name         ::= SYMBOL | ESCAPED;
interface-name      ::= SYMBOL | ESCAPED;
alias-name          ::= SYMBOL | ESCAPED;
semantic-number     ::= SYMBOL | ESCAPED;


identifier          ::= SYMBOL;
