<idea-plugin>
	<id>Yggdrasil</id>
	<name>Yggdrasil Language</name>
	<vendor>voml</vendor>
	<depends>com.intellij.modules.platform</depends>
	<depends optional="true" config-file="plugin-with-rust.xml">com.jetbrains.rust</depends>
	<depends optional="true" config-file="plugin-with-markdown.xml">org.intellij.plugins.markdown</depends>
	<resource-bundle>messages.YggdrasilBundle</resource-bundle>
	<extensions defaultExtensionNs="com.intellij">
		<fileType
			name="Nexus"
			language="Yggdrasil"
			extensions="ygg;yggdrasil;"
			implementationClass="yggdrasil.language.file.YggdrasilFileType"
			fieldName="INSTANCE"/>
		<lang.parserDefinition
			language="Yggdrasil"
			implementationClass="yggdrasil.antlr.YggdrasilParserDefinition"/>
		<multiHostInjector implementation="valkyrie.ide.matcher.LanguageInjector"/>
		<!-- Project -->
		<projectNameProvider implementation="valkyrie.ide.project.ValkyrieProjectName"/>
		<vfs.asyncListener implementation="valkyrie.ide.project.crate.CrateUpdateListener"/>
		<!-- Project Library -->
		<packageDependencies.visitor
			language="Yggdrasil"
			implementationClass="valkyrie.ide.project.ValkyrieDependencyResolver"/>
		<additionalLibraryRootsProvider implementation="valkyrie.ide.project.library.LibraryRootsProvider"/>
		<!-- Project Namespace -->
		<iconProvider implementation="yggdrasil.language.file.NexusIconProvider"/>
		<projectViewNestingRulesProvider implementation="yggdrasil.language.file.NexusFileGroup"/>
		<treeStructureProvider implementation="valkyrie.ide.view.VStructureProvider"/>
		<!--		<lang.structureViewExtension implementation="valkyrie.ide.view.VStructureViewExtension"/>-->
		<lang.psiStructureViewFactory
			language="Yggdrasil"
			implementationClass="valkyrie.ide.view.ValkyrieStructureView"/>
		<typeHierarchyProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.view.hierarchy.TypeHierarchyProvider"/>
		<methodHierarchyProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.view.hierarchy.MethodHierarchyProvider"/>
		<callHierarchyProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.view.hierarchy.CallHierarchyProvider"/>
		<!-- Highlight -->
		<colorSettingsPage implementation="valkyrie.ide.highlight.HighlightSetting"/>
		<highlightVisitor implementation="valkyrie.ide.highlight.NexusHighlighterVisitor"/>
		<lang.syntaxHighlighter
			language="Yggdrasil"
			implementationClass="valkyrie.ide.highlight.TokenHighlighter"
		/>
		<!-- Formatter -->
		<langCodeStyleSettingsProvider implementation="valkyrie.ide.codeStyle.ValkyrieCodeStyleProvider"/>
		<formattingService implementation="valkyrie.ide.formatter.ValkyrieNativeFormat"/>
		<preFormatProcessor implementation="valkyrie.ide.formatter.ValkyrieBeforeFormat"/>
		<lang.formatter language="Yggdrasil" implementationClass="valkyrie.ide.formatter.FormatBuilder"/>
		<postFormatProcessor implementation="valkyrie.ide.formatter.ValkyrieAfterFormat"/>
		<lang.smartEnterProcessor language="Yggdrasil" implementationClass="valkyrie.ide.formatter.SmartEnter"/>
		<!-- Tests -->
		<runConfigurationsSettings implementation="valkyrie.ide.runner.ValkyrieRunnerSettings"/>
		<runConfigurationProducer implementation="valkyrie.ide.runner.ValkyrieRunConfigurationProducer"/>
		<runConfigurationTemplateProvider implementation="valkyrie.ide.runner.ValkyrieRunningTemplateProvider"/>
		<!-- Goto -->
		<breadcrumbsInfoProvider implementation="valkyrie.ide.navigation.ValkyrieBreadcrumbsProvider"/>
		<breadcrumbsPresentationProvider implementation="valkyrie.ide.navigation.ValkyrieBreadcrumbsPresentation"/>
		<symbolNavigation
			forClass="yggdrasil.language.symbol.ValkyrieSymbolTemplate"
			implementationClass="valkyrie.ide.goto.VSymbolNavigationProvider"/>
		<codeInsight.gotoSuper language="Yggdrasil" implementationClass="valkyrie.ide.navigation.GotoSuper"/>
		<importFilteringRule implementation="valkyrie.ide.navigation.ValkyrieImportFilter"/>
		<usageFilteringRuleProvider implementation="valkyrie.ide.navigation.usageFiltering"/>
		<!--		<bookmarkProvider implementation="valkyrie.ide.goto.ValkyrieBookmark"/>-->
		<!--		<bookmarksListProvider implementation="valkyrie.ide.goto.ValkyrieBookmarkList"/>-->
		<!-- Hint -->
		<codeInsight.inlayProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.hint.TypeInlayProvider"/>
		<codeInsight.typeInfo language="Yggdrasil" implementationClass="valkyrie.ide.hint.TypeInfoHint"/>
		<codeInsight.parameterInfo language="Yggdrasil" implementationClass="valkyrie.ide.hint.ParameterInfoHint"/>
		<codeInsight.parameterInfo.listener implementation="valkyrie.ide.hint.ParameterInfoListener"/>
		<codeInsight.parameterNameHints language="Yggdrasil"
		                                implementationClass="valkyrie.ide.hint.ParameterInlayProvider"/>
		<codeInsight.lineMarkerProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.hint.ValkyrieLineMarkerProvider"/>
		<runLineMarkerContributor
			language="Yggdrasil"
			implementationClass="valkyrie.ide.runner.ValkyrieRunner"/>
		<vcs.codeVisionLanguageContext
			language="Yggdrasil"
			implementationClass="valkyrie.ide.hint.AuthorAbove"/>

		<!--		<psi.fileReferenceHelper implementation="valkyrie.ide.reference.ValkyrieFileReference"/>-->
		<psi.treeChangeListener implementation="valkyrie.ide.project.crate.ValkyrieFileListener"/>
		<psi.referenceContributor
			language="Yggdrasil"
			implementation="valkyrie.ide.reference.ValkyrieReferenceContributor"/>
		<!--		<psi.referenceProvider language="Valkyrie" providerClass="valkyrie.ide.reference.ValkyrieReferenceProvider"/>-->
		<!--		<psi.symbolReferenceProvider-->
		<!--			anyReferenceClass="true"-->
		<!--			implementationClass="valkyrie.ide.reference.ValkyrieReferenceProvider"-->
		<!--			hostLanguage="Valkyrie"-->
		<!--			hostElementClass="com.intellij.psi.xml.XmlAttributeValue"-->
		<!--			targetClass="valkyrie.language.symbol.ValkyrieSymbolTemplate"/>-->
		<!-- Lint -->
		<lang.namesValidator language="Yggdrasil" implementationClass="valkyrie.ide.lint.ValkyrieNameValidator"/>
		<qualifiedNameProvider implementation="valkyrie.ide.lint.ValkyrieNameQualifier"/>
		<annotator language="Yggdrasil" implementationClass="valkyrie.ide.annotator.NamepathChecker"/>
		<annotator language="Yggdrasil" implementationClass="valkyrie.ide.annotator.MarkImplicitTypes"/>
		<!-- Declaration -->
		<findUsagesHandlerFactory implementation="valkyrie.ide.usages.ValkyrieUsagesFactory"/>
		<lang.findUsagesProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.usages.ValkyrieUsagesProvider"/>
		<!-- Completion -->
		<typedHandler implementation="valkyrie.ide.completion.AutoInsertBrace"/>
		<backspaceHandlerDelegate implementation="valkyrie.ide.completion.AutoDeleteBrace"/>
		<!--		<lookup.charFilter implementation="valkyrie.ide.completion.CompletionInterrupter"/>-->
		<lang.commenter language="Yggdrasil" implementationClass="valkyrie.ide.formatter.YggdrasilCommenter"/>
		<lang.braceMatcher
			language="Yggdrasil"
			implementationClass="valkyrie.ide.matcher.BraceMatchAdapter"/>
		<lang.quoteHandler
			language="Yggdrasil"
			implementationClass="valkyrie.ide.matcher.ValkyrieQuoteHandler"/>
		<codeCompletionConfigurable instance="valkyrie.ide.completion.CompletionConfig"/>
		<completion.contributor
			language="Yggdrasil"
			implementationClass="valkyrie.ide.completion.CompletionRegistrar"/>
		<nameSuggestionProvider implementation="valkyrie.ide.completion.CompletionSuggestion"/>
		<lang.foldingBuilder
			language="Yggdrasil"
			implementationClass="valkyrie.ide.folding.ValkyrieFoldingBuilder"/>
		<codeBlockProvider language="Yggdrasil" implementationClass="valkyrie.ide.matcher.ValkyrieCodeBlockProvider"/>
		<codeFoldingOptionsProvider instance="valkyrie.ide.folding.ValkyrieFoldingOptions"/>
		<referenceImporter implementation="valkyrie.ide.completion.ValkyrieImportInsert"/>
		<lang.importOptimizer
			language="Yggdrasil"
			implementationClass="valkyrie.ide.completion.ValkyrieImportOptimizer"/>
		<!-- Document -->
		<lang.documentationProvider
			language="Yggdrasil"
			implementationClass="valkyrie.ide.doc.DocumentationProvider"/>
	</extensions>
	<actions>
		<action id="valkyrie.create.file" class="valkyrie.ide.actions.file_transform.ValkyrieCreateFile">
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewHtmlFile"/>
		</action>
		<action id="jss.JssConvertJson" class="valkyrie.ide.actions.FluentConvertMo"/>
		<action id="valkyrie.macro.expand-to-file" class="valkyrie.ide.actions.ExpandMacroToFile">
			<keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>
		</action>
		<!-- Generated	-->
		<action id="valkyrie.macro.expand" class="valkyrie.ide.codegen.ExpandTemplate">
			<add-to-group group-id="GenerateGroup" anchor="last"/>
		</action>
	</actions>
</idea-plugin>
